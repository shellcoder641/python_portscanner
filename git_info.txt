#Ways to use git:
#create a directory where you will be working and saving your project.
$ git init

#Check the status of the directory and all the files:
$ git status

#Add a file for git to track for changes:
$ git add filename

#Now if we modify the tracked file, we can track the changes:
$ git diff filename
#The + sign is what we have added

#Store changed permanently into repository:
$ git commit -m "Message... "

#Log back all the commits.
$ git log

#When this file is modified after being committed, we need to add it again and do another commit.
#The line in red means that the file is modified and need to be added and commit again for changes
#to store permanently.

#The currently commit is known as the HEAD commit:
$ git show HEAD
#Show all the changes.

#When we changed the file and then don't want to keep it, we can restore it back:
$ git checkout HEAD filename

#Now let's create another file
$ git add newfile

#Suppose this file was commited
$ git commit -m "It is done."

#Now let's suppose we accidently make a changes in the newfile
#Now if we add newfile into the staging area
$ git add newfile
#Now we don't want to commit changes
$ git reset HEAD newfile
# will reset newfile back to HEAD commit and it is unstaged.

#We can also use the form
$ git reset SHA
#To restore to any commits, SHA=first seven characters
#For example
$ git reset abc1234
#Will reset commit to abc1234xx, any commits after that will be gone,
# abc1234xx will now be the HEAD

#Check for current branch
$ git branch
